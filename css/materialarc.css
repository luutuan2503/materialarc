/*
			Materilarc Main file
*/
body {
  padding: 0px;
  margin: 0px;
  font-family: 'Roboto Mono', monospace; }

/*
	#######################################
		Grid System Logic for materialarc
	#######################################

	--> to learn more about grid system go to this url  www.sitepoint.com/understanding-css-grid-systems
*/
.row {
  display: flex;
  flex-flow: row;
  flex-wrap: wrap; }

.col + .col {
  margin-left: 1.6%; }

.col-left {
  align-self: flex-start; }

.col-center {
  align-self: center; }

.col-right {
  align-self: flex-end; }

/*
	materialrc Input feilds styling
*/
/*
		styling Buttons
*/
button.flat-btn,
input[type="button"].flat-btn,
input[type="submit"].flat-btn {
  position: relative;
  display: inline-block;
  font-family: 'Roboto', Arial, serif;
  font-weight: bold;
  font-size: 15px;
  min-width: 64px;
  min-height: 18px;
  padding: 9px 8px 9px 8px;
  margin: 8px;
  border: none;
  outline: none;
  border-radius: 2px;
  background-color: transparent;
  transition: all .4s;
  text-transform: uppercase; }

button.flat-btn:hover,
input[type="button"].flat-btn:hover,
input[type="submit"].flat-btn:hover {
  background-color: rgba(0, 0, 0, 0.1); }

/*Normal Button Stylling*/
input[type="submit"],
[type="button"],
button
, button.btn,
.btn,
input[type="button"].btn,
input[type="submit"].btn {
  position: relative;
  display: inline-block;
  font-family: 'Roboto', Arial, serif;
  font-weight: bold;
  font-size: 15px;
  min-width: 64px;
  min-height: 18px;
  padding: 9px 8px 9px 8px;
  margin: 8px;
  border: none;
  outline: none;
  border-radius: 2px;
  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.6);
  background-color: #512DA8;
  color: #ecf0f1;
  transition: background-color .3s;
  text-decoration: none;
  text-align: center;
  cursor: context-menu; }

input[type="submit"]:hover,
input[type="button"]:hover,
button:hover
, button.btn:hover,
input[type="button"].btn:hover,
input[type="submit"].btn:hover,
.btn:hover {
  background-color: #2DA88E;
  box-shadow: 0 1px 20px rgba(0, 0, 0, 0.6); }

div.input-group {
  display: block;
  padding: 20px 0px 0px 0px;
  margin-bottom: 10px;
  position: relative; }

input[type="text"], input[type="password"] {
  border-color: #999;
  border-width: 0 0 2px 0;
  width: 100%;
  background-color: transparent; }

/*Labe of input*/
input[type="text"] ~ label, input[type="password"] ~ label {
  color: #999;
  font-size: 18px;
  position: absolute;
  pointer-events: none;
  left: 5px;
  top: 15px;
  transition: 0.2s ease all; }

/*Bar that shows down when input is focused*/
.input-group .bar {
  bottom: 0px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #512DA8;
  position: absolute;
  display: none; }

/*For preventing default lines when focused*/
input:focus {
  outline: none; }

/*When input gain focus shift label up and resize*/
input[type="text"].full ~ label, input[type="password"].full ~ label, input[type="text"]:focus ~ label, input[type="password"]:focus ~ label {
  top: 0px;
  font-size: 14px;
  color: #512DA8;
  font-weight: bold; }

/*Bar animation when input focused*/
@keyframes inputbarin {
  0% {
    left: 50%;
    right: 50%;
    width: 2%;
    height: 3px; }
  100% {
    width: 100%; } }
/*show bar andIncreasse bar length animation when input is focused*/
input[type="text"]:focus ~ .bar, input[type="password"]:focus ~ .bar {
  display: block;
  animation: inputbarin 0.4s ease; }

/*For Radio buttons */
/*
	hidding radio button since stylling is very hard.
	so stylling using label. label contain.outer-circle div for.outer-circle circle and.inner-circle div for.inner-circle circel
	user will have option to add theese div manualy or using javascript
*/
input[type="radio"] {
  display: none; }

/*Label of radio button*/
input[type="radio"] + label {
  margin-left: 0px;
  cursor: pointer; }

/*Div for.outer-circle Circel*/
input[type="radio"] + label .outer-circle {
  content: '';
  display: inline-block;
  position: relative;
  width: 12px;
  height: 12px;
  margin-right: 8px;
  border: 2px solid black;
  border-radius: 50%;
  transition: all 0.3s linear; }

/*Div for.inner-circle circle*/
input[type="radio"] + label .inner-circle {
  content: '';
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: #512DA8;
  width: 5px;
  height: 5px;
  border-radius: 15px;
  opacity: 0;
  transition: all 0.32s linear; }

input[type="radio"]:not(:checked) + label:hover .inner-circle {
  background-color: #2DA88E;
  opacity: 1; }

input[type="radio"]:not(:checked) + label:hover .outer-circle {
  border-color: #2DA88E; }

input[type=radio]:checked + label .outer-circle {
  border-color: #512DA8; }

/*Bouncing effect when radio button is checked*/
@keyframes animInner {
  0% {
    width: 6px;
    height: 6px; }
  50% {
    height: 10px;
    width: 10px; }
  70% {
    height: 6px;
    width: 6px; }
  100% {
    height: 10px;
    width: 10px; } }
input[type=radio]:checked + label .inner-circle {
  opacity: 1;
  animation: animInner 0.7s ease;
  height: 8px;
  width: 8px; }

/*Style for checkbox*/
/*Same concept as radio button hide the original checkboc create the new one using sudo elemenet before and after*/
input[type="checkbox"] {
  display: none; }

/*lebel of checkbox*/
input[type="checkbox"] + label {
  position: relative;
  cursor: pointer; }

input[type="checkbox"] + label:before {
  content: '';
  left: 0;
  display: inline-block;
  margin-right: 10px;
  height: 15px;
  width: 15px;
  border: 2px solid black;
  border-radius: 6px;
  transition: all 0.3s linear; }

input[type="checkbox"] + label:after {
  opacity: 0;
  display: inline-block;
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 12px;
  width: 12px;
  border: 3px solid transparent;
  border-radius: 6px;
  transition: all 0.3s linear; }

input[type="checkbox"]:checked + label:before {
  border-color: #512DA8; }

input[type="checkbox"]:checked + label:after {
  opacity: 1;
  top: -5px;
  left: 4px;
  width: 4px;
  height: 7px;
  border-top: 3px solid transparent;
  border-left: 3px solid transparent;
  border-right: 3px solid #512DA8;
  border-bottom: 3px solid #512DA8;
  transform: rotateZ(38deg);
  border-radius: 0px; }

input[type="checkbox"] + label:hover:before {
  border-color: #2DA88E; }

input[type="checkbox"] + label:hover:after {
  border-color: transparent #2DA88E #2DA88E transparent; }

/*
	Material Design cards
	#############################################
		thanks CSS-TRICKS for providing logic
	#############################################

	url:- https://css-tricks.com/snippets/sass/material-shadows-mixin/
*/
/**
 * Computes a top-shadow for a card effect.
 *
 * @param {Number} $depth - depth level
 *
 * @return {List}
 */
/**
 * Computes a bottom-shadow for a card effect.
 *
 * @param {Number} $depth - depth level
 *
 * @return {List}
 */
/**
 * Gives a card depth effect.
 *
 * @param {Number} $depth - depth level (between 1 and 5)
 *
 * @link http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality Google Design
 *
 * @requires {function} top-shadow
 * @requires {function} bottom-shadow
 */
.card {
  box-shadow: 0 1.5px 4px rgba(0, 0, 0, 0.24), 0 1.5px 6px rgba(0, 0, 0, 0.12);
  padding: 5px; }

.card-2 {
  box-shadow: 0 3px 12px rgba(0, 0, 0, 0.23), 0 3px 12px rgba(0, 0, 0, 0.16);
  padding: 5px; }

.card-4 {
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.23), 0 10px 40px rgba(0, 0, 0, 0.19);
  padding: 5px; }

.card-8 {
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.22), 0 14px 56px rgba(0, 0, 0, 0.25);
  padding: 5px; }

.card-16 {
  box-shadow: 0 15px 24px rgba(0, 0, 0, 0.22), 0 19px 76px rgba(0, 0, 0, 0.3);
  padding: 5px; }

/*
	################################
		For large screen devices
	################################
*/
@media screen and (min-width: 1024px) {
  .ls1 {
    width: 6.86667%; }

  .ls2 {
    width: 15.33333%; }

  .ls3 {
    width: 23.8%; }

  .ls4 {
    width: 32.26667%; }

  .ls5 {
    width: 40.73333%; }

  .ls6 {
    width: 49.2%; }

  .ls7 {
    width: 57.66667%; }

  .ls8 {
    width: 66.13333%; }

  .ls9 {
    width: 74.6%; }

  .ls10 {
    width: 83.06667%; }

  .ls11 {
    width: 91.53333%; }

  .ls12 {
    width: 100%; } }
/*
	#################################
		For medium screen devices
	#################################
*/
@media screen and (max-width: 1023px) and (min-width: 719px) {
  .ms1 {
    width: 6.86667%; }

  .ms2 {
    width: 15.33333%; }

  .ms3 {
    width: 23.8%; }

  .ms4 {
    width: 32.26667%; }

  .ms5 {
    width: 40.73333%; }

  .ms6 {
    width: 49.2%; }

  .ms7 {
    width: 57.66667%; }

  .ms8 {
    width: 66.13333%; }

  .ms9 {
    width: 74.6%; }

  .ms10 {
    width: 83.06667%; }

  .ms11 {
    width: 91.53333%; }

  .ms12 {
    width: 100%; } }
/*
	##################################
		For small screen devices
	##################################
*/
@media screen and (max-width: 719px) {
  .ss1 {
    width: 6.86667%; }

  .ss2 {
    width: 15.33333%; }

  .ss3 {
    width: 23.8%; }

  .ss4 {
    width: 32.26667%; }

  .ss5 {
    width: 40.73333%; }

  .ss6 {
    width: 49.2%; }

  .ss7 {
    width: 57.66667%; }

  .ss8 {
    width: 66.13333%; }

  .ss9 {
    width: 74.6%; }

  .ss10 {
    width: 83.06667%; }

  .ss11 {
    width: 91.53333%; }

  .ss12 {
    width: 100%; } }

/*# sourceMappingURL=materialarc.css.map */
