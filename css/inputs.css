input[type="text"], input[type="password"] {
  border-color: #999;
  border-width: 0 0 2px 0;
  width: 100%;
  background-color: transparent; }

/*Labe of input*/
input[type="text"] ~ label, input[type="password"] ~ label {
  color: #999;
  font-size: 18px;
  position: absolute;
  pointer-events: none;
  left: 5px;
  top: 15px;
  transition: 0.2s ease all; }

/*Bar that shows down when input is focused*/
.input-group .bar {
  bottom: 0px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #512DA8;
  position: absolute;
  display: none; }

/*For preventing default lines when focused*/
input:focus {
  outline: none; }

/*When input gain focus shift label up and resize*/
input[type="text"].full ~ label, input[type="text"]:focus ~ label, input[type="password"]:focus ~ label {
  top: 0px;
  font-size: 14px;
  color: #512DA8;
  font-weight: bold; }

/*Bar animation when input focused*/
@-webkit-keyframes inputbarin {
  0% {
    left: 50%;
    right: 50%;
    width: 2%;
    height: 3px; }
  100% {
    width: 100%; } }
@keyframes inputbarin {
  0% {
    left: 50%;
    right: 50%;
    width: 2%;
    height: 3px; }
  100% {
    width: 100%; } }
/*show bar andIncreasse bar length animation when input is focused*/
input[type="text"]:focus ~ .bar, input[type="password"]:focus ~ .bar {
  display: block;
  -webkit-animation: inputbarin 0.4s ease;
          animation: inputbarin 0.4s ease; }

/*For Radio buttons */
/*
	hidding radio button since stylling is very hard.
	so stylling using label. label contain outer div for outer circle and inner div for inner circel
	user will have option to add theese div manualy or using javascript
*/
input[type="radio"] {
  display: none; }

/*Label of radio button*/
input[type="radio"] + label {
  margin-left: 0px;
  cursor: pointer; }

/*Div for Outer Circel*/
input[type="radio"] + label .outer {
  content: '';
  display: inline-block;
  position: relative;
  width: 12px;
  height: 12px;
  margin-right: 8px;
  border: 3px solid black;
  border-radius: 15px;
  transition: all 0.3s linear; }

/*Div for inner circle*/
input[type="radio"] + label .inner {
  content: '';
  display: inline-block;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  background-color: #502DA8;
  width: 5px;
  height: 5px;
  border-radius: 15px;
  opacity: 0;
  transition: all 0.32s linear; }

input[type="radio"]:not(:checked) + label:hover .inner {
  background-color: #2DA88E;
  opacity: 1; }

input[type="radio"]:not(:checked) + label:hover .outer {
  border-color: #2DA88E; }

input[type=radio]:checked + label .outer {
  border-color: #502DA8; }

/*Bouncing effect when radio button is checked*/
@-webkit-keyframes innerCicle {
  0% {
    width: 6px;
    height: 6px; }
  50% {
    height: 10px;
    width: 10px; }
  70% {
    height: 6px;
    width: 6px; }
  100% {
    height: 10px;
    width: 10px; } }
@keyframes innerCicle {
  0% {
    width: 6px;
    height: 6px; }
  50% {
    height: 10px;
    width: 10px; }
  70% {
    height: 6px;
    width: 6px; }
  100% {
    height: 10px;
    width: 10px; } }
input[type=radio]:checked + label .inner {
  opacity: 1;
  -webkit-animation: innerCicle 0.7s ease;
          animation: innerCicle 0.7s ease;
  height: 8px;
  width: 8px; }

/*Style for checkbox*/
/*Same concept as radio button hide the original checkboc create the new one using sudo elemenet before and after*/
input[type="checkbox"] {
  display: none; }

/*lebel of checkbox*/
input[type="checkbox"] + label {
  position: relative;
  cursor: pointer; }

input[type="checkbox"] + label:before {
  content: '';
  left: 0;
  display: inline-block;
  margin-right: 10px;
  height: 15px;
  width: 15px;
  border: 2px solid black;
  transition: all 0.3s linear; }

input[type="checkbox"] + label:before {
  border-radius: 6px; }

input[type="checkbox"] + label:after {
  opacity: 0;
  display: inline-block;
  content: '';
  position: absolute;
  left: 0;
  height: 12px;
  width: 12px;
  border: 3px solid transparent;
  transition: all 0.3s linear; }

input[type="checkbox"]:checked + label:before {
  border-color: #502DA8; }

input[type="checkbox"]:checked + label:after {
  opacity: 1;
  left: 3px;
  width: 4px;
  height: 7px;
  border-top: 3px solid transparent;
  border-left: 3px solid transparent;
  border-right: 3px solid #502DA8;
  border-bottom: 3px solid #502DA8;
  -webkit-transform: rotateZ(38deg);
      -ms-transform: rotate(38deg);
          transform: rotateZ(38deg); }

input[type="checkbox"] + label:hover:before {
  border-color: #2DA88E; }

input[type="checkbox"] + label:hover:after {
  border-color: transparent #2DA88E #2DA88E transparent; }

/*# sourceMappingURL=maps/inputs.css.map */