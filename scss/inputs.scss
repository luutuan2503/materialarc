/*
	materialrc Input feilds styling
*/

@import 'colors';//For color pallete

/*
		styling Buttons
*/

button.flat-btn,
input[type="button"].flat-btn,
input[type="submit"].flat-btn
{
	position: relative;
	display: inline-block;
	font-family: 'Roboto', Arial, serif;
	font-weight: bold;
	font-size: 15px;
	min-width: 64px;
	min-height: 18px;
	padding:9px 8px 9px 8px;
	margin: 8px;
	border: none;
	outline: none;
	border-radius: 2px;
	background-color: rgba(0,0,0,0);
	transition:all .4s;
	text-transform: uppercase;
}

button.flat-btn:hover,
input[type="button"].flat-btn:hover,
input[type="submit"].flat-btn:hover
{
	background-color: rgba(0,0,0,0.1);
}

/*Normal Button Stylling*/

input[type="submit"],
[type="button"],
button
,button.btn,
.btn,
input[type="button"].btn,
input[type="submit"].btn
{
	position: relative;
	display: inline-block;
	font-family: 'Roboto', Arial, serif;
	font-weight: bold;
	font-size: 15px;
	min-width: 64px;
	min-height: 18px;
	padding:9px 8px 9px 8px;
	margin: 8px;
	border: none;
	outline: none;
	border-radius: 2px;
	box-shadow: 0 1px 4px rgba(0, 0, 0, .6);  
	background-color: $selected;
	color: #ecf0f1;
	transition: background-color .3s;
	text-decoration: none;
	text-align: center;
	cursor:context-menu;
}

input[type="submit"]:hover,
input[type="button"]:hover,
button:hover
,button.btn:hover,
input[type="button"].btn:hover,
input[type="submit"].btn:hover,
.btn:hover
{
	background-color: $hover;
	box-shadow: 0 1px 20px rgba(0, 0, 0, 0.6);
}

div.input-group
{
	display: block;
	padding: 20px 0px 0px 0px;
	margin-bottom: 10px;
	position: relative;
}

input[type="text"],input[type="password"]
{
	border-color: #999;
	border-width: 0 0 2px 0;
	width: 100%;
	background-color: rgba(0,0,0,0);
}

/*Labe of input*/
input[type="text"] ~ label,input[type="password"] ~ label
{
	color:#999; 
	font-size:18px;
	position:absolute;
	pointer-events:none;
	left:5px;
	top:15px;
	transition:0.2s ease all; 
}

/*Bar that shows down when input is focused*/
.input-group .bar
{
	bottom: 0px;	
	left: 0;
	width: 100%;
	height: 2px;
	background-color: $selected;
	position: absolute;
	display: none;
}

/*For preventing default lines when focused*/ 
input:focus
{
	outline: none;
}

/*When input gain focus shift label up and resize*/
input[type="text"].full ~ label,input[type="password"].full ~ label,input[type="text"]:focus ~ label,input[type="password"]:focus ~ label
{
  top: 0px;
  font-size:14px;
  color:$primary1;
  font-weight: bold;
}

/*Bar animation when input focused*/
@keyframes inputbarin
{
	0%
	{
		left: 50%;
		right: 50%;
		width: 2%;
		height: 3px;
	}

	100%
	{
		width: 100%;
	}
}

/*show bar andIncreasse bar length animation when input is focused*/
input[type="text"]:focus ~.bar,input[type="password"]:focus ~.bar
{
	display: block;
    animation:inputbarin 0.4s ease;
}

	/*For Radio buttons */

/*
	hidding radio button since stylling is very hard.
	so stylling using label. label contain.outer-circle div for.outer-circle circle and.inner-circle div for.inner-circle circel
	user will have option to add theese div manualy or using javascript
*/
input[type="radio"]
{
	display: none;
}

/*Label of radio button*/
input[type="radio"] + label
{
	margin-left: 0px;
	cursor: pointer;
}

/*Div for.outer-circle Circel*/
input[type="radio"] + label .outer-circle
{
	content: '';
	display: inline-block;
	position: relative;
	width: 12px;
	height: 12px;
	margin-right: 8px;
	border: 2px solid black;
	border-radius: 50%;	
	transition: all 0.3s linear;
}

/*Div for.inner-circle circle*/
input[type="radio"] +label .inner-circle
{
	content: '';
	display: inline-block;
	position: absolute;
	top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
	background-color: $selected;
	width: 5px;
	height: 5px;
	border-radius: 15px;	
	opacity: 0;	
	transition: all 0.32s linear;
}


input[type="radio"]:not(:checked) +label:hover .inner-circle
{
	background-color: $hover;
	opacity: 1;
}

input[type="radio"]:not(:checked) +label:hover .outer-circle
{
	border-color: $hover;
}

input[type=radio]:checked +label .outer-circle
{
	border-color: $selected;
}

/*Bouncing effect when radio button is checked*/
@keyframes animInner
	{
		0%
		{
			width: 6px;
			height: 6px;
		}

		50%
		{
			height: 10px;
			width: 10px;

		}

		70%
		{
			height: 6px;
			width: 6px;
		}

		100%
		{
			height: 10px;
			width: 10px;
		}
	}

input[type=radio]:checked +label .inner-circle
{
	opacity: 1;
	animation:animInner 0.7s ease;
	height: 8px;
	width: 8px;
}
	
		/*Style for checkbox*/

/*Same concept as radio button hide the original checkboc create the new one using sudo elemenet before and after*/
input[type="checkbox"]
{
	display: none;
}

/*lebel of checkbox*/
input[type="checkbox"] + label
{
	position: relative;
	cursor: pointer;
}

input[type="checkbox"] + label:before
{
	content: '';
	left: 0;
	display: inline-block;
	margin-right: 10px;
	height: 15px;
	width:  15px;
	border:2px solid black;
	border-radius: 6px;
	transition: all 0.3s linear;
}

input[type="checkbox"] + label:after
{
	opacity: 0;
	display: inline-block;
	content: '';
	position: absolute;
	top:0;
	left: 0;
	height: 12px;
	width:  12px;
	border: 3px solid transparent;
	border-radius: 6px;
	transition: all 0.3s linear;
}

input[type="checkbox"]:checked + label:before
{
	border-color: $selected;
}

input[type="checkbox"]:checked + label:after
{
	opacity: 1;
	top: -5px;
	left: 4px;
	width: 4px;
	height: 7px;
	border-top: 3px solid transparent;
	border-left: 3px solid transparent;
	border-right: 3px solid $selected;
	border-bottom: 3px solid $selected;
	transform: rotateZ(38deg);
	border-radius:0px;
}

input[type="checkbox"] + label:hover:before
{
	border-color: $hover;
}

input[type="checkbox"] + label:hover:after
{
	border-color: transparent $hover $hover transparent ;
}